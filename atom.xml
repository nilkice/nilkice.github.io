<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nilkice</title>
  
  <subtitle>一剑丶一念</subtitle>
  <link href="https://likunlin.top/atom.xml" rel="self"/>
  
  <link href="https://likunlin.top/"/>
  <updated>2021-09-16T14:22:42.976Z</updated>
  <id>https://likunlin.top/</id>
  
  <author>
    <name>likunlin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python基础之dict和set</title>
    <link href="https://likunlin.top/2021/08/19/Python%E5%9F%BA%E7%A1%80%E4%B9%8Bdict%E5%92%8Cset/"/>
    <id>https://likunlin.top/2021/08/19/Python%E5%9F%BA%E7%A1%80%E4%B9%8Bdict%E5%92%8Cset/</id>
    <published>2021-08-19T03:38:40.000Z</published>
    <updated>2021-09-16T14:22:42.976Z</updated>
    
    <content type="html"><![CDATA[<h1 id="dict和set"><a href="#dict和set" class="headerlink" title="dict和set"></a>dict和set</h1><h2 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h2><ul><li>概念：Python内置了字典—dict的支持，dict全称dictionary，在其他语言中也称为map，使用键-值（key-value）存储，具有极快的查找速度</li><li>例如<pre><code>  * MathGrade = &#123;&#39;小明&#39; : 85, &#39;小红&#39; : 90, &#39;小白&#39; : 88&#125;  * print(MathGrade[&#39;小红&#39;])  * 90</code></pre></li><li>给定键的名称，可以非常快的查找到对应的值</li><li>除了初始化指定键值对，还可以通过key放入<pre><code>  * MathGrade[&#39;小明&#39;] = 89</code></pre></li><li>一个key只能有一个对应的value</li><li>key不存在时，插入value会出错</li><li>可以使用 in 来判断key是否存在<pre><code>  * print(&#39;小明&#39; in MathGrade)  * True</code></pre></li><li>还可以通过dict的get()方法来判断，返回对应的值，或者自己指定值<pre><code>  * grade = MathGrade.get(&#39;小明&#39;)  * print(grade)  * 85  * -----分割线------  * grade = MathGrade.get(&#39;小黄&#39;, -1)  * print(grade)  * -1</code></pre></li><li>删除key，使用pop(key)，将对应的键值对全部删除<pre><code>  * MathGrade.pop(&#39;小明&#39;)</code></pre></li></ul><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><ul><li>set和dict类似，也是一组key的集合，但不存储value，而且key不能重复</li><li>创建一个set，需要传入一个list集合<pre><code>  * s = set([1, 2, 3])  * print(s)  * &#123;1, 2, 3&#125;</code></pre></li><li>重复的元素在set中自动被过滤</li><li>在set中添加元素<pre><code>  * s.add(4)  * s.add(4)  * print(s)  * &#123;1, 2, 3, 4&#125;</code></pre></li><li>删除set中的元素<pre><code>  * s.remove(4)  * print(s)  * &#123;1, 2, 3, 4&#125;</code></pre></li><li>set的并集，交集运算<pre><code>  * s1 = set([1, 2, 3])  * s2 = set([1, 2, 4])  * print(s1 &amp; s2)  * &#123;1, 2&#125;  * print(s1 | s2)  * &#123;1, 2, 3, 4&#125;</code></pre><h2 id="dict和list的区别"><a href="#dict和list的区别" class="headerlink" title="dict和list的区别"></a>dict和list的区别</h2></li><li>dict<ul><li>查找和插入的速度很快，不会随着key的增加而变慢</li><li>占用内存多，浪费严重</li></ul></li><li>list<ul><li>查找和插入的速度随着元素的增多而变慢</li><li>占用内存少<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2></li></ul></li><li>dict和set的元素都是不可变对象，因此不可将list作为其元素</li><li>原因是dict和set的实现由哈希表完成</li><li>本教程代码均在Visual Studio2019中实现</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;dict和set&quot;&gt;&lt;a href=&quot;#dict和set&quot; class=&quot;headerlink&quot; title=&quot;dict和set&quot;&gt;&lt;/a&gt;dict和set&lt;/h1&gt;&lt;h2 id=&quot;dict&quot;&gt;&lt;a href=&quot;#dict&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="Python" scheme="https://likunlin.top/categories/Python/"/>
    
    <category term="dict和set" scheme="https://likunlin.top/categories/Python/dict%E5%92%8Cset/"/>
    
    
    <category term="Python基础" scheme="https://likunlin.top/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Comment test</title>
    <link href="https://likunlin.top/2021/08/19/Comment-test/"/>
    <id>https://likunlin.top/2021/08/19/Comment-test/</id>
    <published>2021-08-19T03:38:40.000Z</published>
    <updated>2021-08-20T17:14:52.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="看看可以评论吗"><a href="#看看可以评论吗" class="headerlink" title="看看可以评论吗"></a>看看可以评论吗</h2><br>千里之行，始于足下。——老子]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;看看可以评论吗&quot;&gt;&lt;a href=&quot;#看看可以评论吗&quot; class=&quot;headerlink&quot; title=&quot;看看可以评论吗&quot;&gt;&lt;/a&gt;看看可以评论吗&lt;/h2&gt;&lt;br&gt;
千里之行，始于足下。——老子
</summary>
      
    
    
    
    <category term="测试" scheme="https://likunlin.top/categories/%E6%B5%8B%E8%AF%95/"/>
    
    <category term="评论" scheme="https://likunlin.top/categories/%E6%B5%8B%E8%AF%95/%E8%AF%84%E8%AE%BA/"/>
    
    
    <category term="测试" scheme="https://likunlin.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Python基础之数据类型</title>
    <link href="https://likunlin.top/2021/08/19/Python%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://likunlin.top/2021/08/19/Python%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2021-08-19T03:38:40.000Z</published>
    <updated>2021-09-15T13:57:06.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python基础"><a href="#Python基础" class="headerlink" title="Python基础"></a>Python基础</h1><ul><li>Python使用缩进来组织代码块，确保不混用Tab和空格</li><li>Python程序是大小写敏感的</li><li>Python是动态语言</li><li>变量本身类型不固定的语言称之为动态语言，与之相对的静态语言，静态语言在定义变量时必须指定变量类型</li></ul><h2 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h2><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><ol><li>python可以处理任意大小的整数</li><li>可以使用十六进制来方便的表示二进制<ul><li>0x前缀和0-9，a-f表示</li></ul></li><li>10_000_000与10000000是完全一样的</li><li>整数运算永远是精准的</li><li>在Python中有两种除法<ul><li>一种除法是/，计算结果是浮点数</li><li>还有一种是//，称为地板除，计算结果是整数</li></ul></li><li>取余，%</li></ol><h3 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h3><ol><li>按照科学计数法表示时，一个浮点数的小数点位置是可变的<ul><li>1.23e9==12.3e8</li></ul></li><li>用科学计数法表示时，把10用e代替</li></ol><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ol><li>表示文本时，可以使用’    ‘，或”    “</li><li>转义字符\<ul><li>\n表示换行，\t表示制表，\表示\</li><li>为了简化，Python允许使用r’    ‘表示’ ‘内部的字符串默认不转义</li></ul></li><li>表示多行内容’’’…’’’<ul><li>例如：print(‘’’line1…line2…line3’’’)</li></ul></li></ol><h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><ol><li>取值True和False，运算and，or，not</li></ol><h3 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h3><ol><li>空值是Python中一个特殊的值，用None表示，</li></ol><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ol><li>变量名必须是大小写英文，数字和_的组合，且不能用数字开头</li></ol><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><ol><li>在Python中，通常用全部大写的变量名表示常量，如PI</li><li>但事实上PI仍是一个变量</li></ol><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ol><li>Python支持多种数据类型，在计算机内部，可以把任何数据都看成一个“对象”，而变量就是在程序中用来指向这些数据对象的，对变量赋值就是把数据和变量给关联起来</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Python基础&quot;&gt;&lt;a href=&quot;#Python基础&quot; class=&quot;headerlink&quot; title=&quot;Python基础&quot;&gt;&lt;/a&gt;Python基础&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Python使用缩进来组织代码块，确保不混用Tab和空格&lt;/li&gt;
&lt;li&gt;Py</summary>
      
    
    
    
    <category term="Python" scheme="https://likunlin.top/categories/Python/"/>
    
    <category term="数据类型" scheme="https://likunlin.top/categories/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
    
    <category term="Python基础" scheme="https://likunlin.top/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>HRB_Station</title>
    <link href="https://likunlin.top/2021/08/19/HRB-Station/"/>
    <id>https://likunlin.top/2021/08/19/HRB-Station/</id>
    <published>2021-08-19T03:38:40.000Z</published>
    <updated>2021-09-12T02:57:01.404Z</updated>
    
    <content type="html"><![CDATA[<h2 id="哈尔滨-9-11"><a href="#哈尔滨-9-11" class="headerlink" title="哈尔滨-9.11"></a>哈尔滨-9.11</h2><p><img src="https://cdn.jsdelivr.net/gh/nilkice/blog-img/IMG_0073.JPG"><br>九月十一号的哈尔滨火车站，我穿着短衣短袖在十多度的冷风中，差点没把我送走…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;哈尔滨-9-11&quot;&gt;&lt;a href=&quot;#哈尔滨-9-11&quot; class=&quot;headerlink&quot; title=&quot;哈尔滨-9.11&quot;&gt;&lt;/a&gt;哈尔滨-9.11&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/nilkice/</summary>
      
    
    
    
    <category term="游记" scheme="https://likunlin.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="感想" scheme="https://likunlin.top/tags/%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>关于搭建blog时踩过的坑</title>
    <link href="https://likunlin.top/2021/08/19/%E5%85%B3%E4%BA%8E%E6%90%AD%E5%BB%BAblog%E6%97%B6%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    <id>https://likunlin.top/2021/08/19/%E5%85%B3%E4%BA%8E%E6%90%AD%E5%BB%BAblog%E6%97%B6%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/</id>
    <published>2021-08-19T03:38:40.000Z</published>
    <updated>2021-09-12T03:11:42.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建工具："><a href="#搭建工具：" class="headerlink" title="搭建工具："></a>搭建工具：</h2><ul><li><a href="https://git-scm.com/downloads">git</a></li><li><a href="http://nodejs.cn/download/">node.js</a></li></ul><h2 id="使用步骤："><a href="#使用步骤：" class="headerlink" title="使用步骤："></a>使用步骤：</h2><h3 id="git："><a href="#git：" class="headerlink" title="git："></a>git：</h3><ol><li>下载并安装好</li><li>了解关于git的基本概念和指令，推荐这个：<a href="https://www.liaoxuefeng.com/wiki/896043488029600">有关git的教程</a><br>git作为github使用的重要工具，可单独进行深入学习，了解git（目前世界上最先进的分布式版本控制系统）有助于在github进行项目开发</li></ol><h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><ol><li><p>下载并安装好</p></li><li><p>坑：</p><ol><li>当使用 node -v、npm -v 指令发现没问题时，软件其实已经就已经安装好了，但当我在修改全局依赖包下载路径后，并试图使用 npm install @vue/cli -g 指令测试修改结果时，总会出现许多奇奇怪怪的安装失败错误<ul><li>提示没有权限</li><li>提示路径信息错误</li></ul></li></ol><p> 解决方法：无权限则以管理员身份启动cmd，路径错误则删除用户目录下 .npmrc 文件</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;搭建工具：&quot;&gt;&lt;a href=&quot;#搭建工具：&quot; class=&quot;headerlink&quot; title=&quot;搭建工具：&quot;&gt;&lt;/a&gt;搭建工具：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;git&lt;/a&gt;&lt;/li&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://likunlin.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="搭建blog" scheme="https://likunlin.top/tags/%E6%90%AD%E5%BB%BAblog/"/>
    
  </entry>
  
  <entry>
    <title>测试各种东西...</title>
    <link href="https://likunlin.top/2021/08/19/%E6%B5%8B%E8%AF%95%E5%90%84%E7%A7%8D%E4%B8%9C%E8%A5%BF/"/>
    <id>https://likunlin.top/2021/08/19/%E6%B5%8B%E8%AF%95%E5%90%84%E7%A7%8D%E4%B8%9C%E8%A5%BF/</id>
    <published>2021-08-19T03:38:40.000Z</published>
    <updated>2021-08-20T18:36:02.332Z</updated>
    
    <content type="html"><![CDATA[<h2 id="嵌入哔哩哔哩-bilibili-视频"><a href="#嵌入哔哩哔哩-bilibili-视频" class="headerlink" title="嵌入哔哩哔哩(bilibili)视频"></a>嵌入哔哩哔哩(bilibili)视频</h2><div style="position: relative; padding: 30% 45%;"><iframe         style="position: absolute;         width: 100%;         height: 100%;         left: 0; top: 0;"         src="https://player.bilibili.com/player.html?aid=758772694&bvid=BV1V64y19758&cid=359450650&page=1&as_wide=1&high_quality=1&danmaku=0"         frameborder="no"        allowfullscreen="true"         scrolling="no"></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;嵌入哔哩哔哩-bilibili-视频&quot;&gt;&lt;a href=&quot;#嵌入哔哩哔哩-bilibili-视频&quot; class=&quot;headerlink&quot; title=&quot;嵌入哔哩哔哩(bilibili)视频&quot;&gt;&lt;/a&gt;嵌入哔哩哔哩(bilibili)视频&lt;/h2&gt;&lt;div styl</summary>
      
    
    
    
    <category term="测试" scheme="https://likunlin.top/categories/%E6%B5%8B%E8%AF%95/"/>
    
    <category term="页面元素" scheme="https://likunlin.top/categories/%E6%B5%8B%E8%AF%95/%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0/"/>
    
    
    <category term="页面元素" scheme="https://likunlin.top/tags/%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0/"/>
    
  </entry>
  
</feed>
